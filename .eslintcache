[{"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\index.js":"1","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\reportWebVitals.js":"2","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Components\\Sidebar\\index.js":"3","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Components\\Sidebar\\Parts\\Menus.js":"4","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Components\\Sidebar\\Parts\\Brand.js":"5","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\index.js":"6","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Dashboard.js":"7","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Info.js":"8","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\App.js":"9","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Drugs\\index.js":"10","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Drugs\\Search.js":"11","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Drugs\\ActionButton.js":"12","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Drugs\\Datasource.js":"13","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Components\\Table.js":"14","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Components\\Modal.js":"15","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Components\\Context.js":"16","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Drugs\\Detail\\index.js":"17"},{"size":613,"mtime":1610549911857,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1610463748308,"results":"20","hashOfConfig":"19"},{"size":280,"mtime":1610554293455,"results":"21","hashOfConfig":"19"},{"size":1479,"mtime":1610520412618,"results":"22","hashOfConfig":"19"},{"size":166,"mtime":1610511960606,"results":"23","hashOfConfig":"19"},{"size":1389,"mtime":1611495726205,"results":"24","hashOfConfig":"19"},{"size":1759,"mtime":1610972143958,"results":"25","hashOfConfig":"19"},{"size":67,"mtime":1610514422673,"results":"26","hashOfConfig":"19"},{"size":1159,"mtime":1610978039449,"results":"27","hashOfConfig":"19"},{"size":880,"mtime":1610635110022,"results":"28","hashOfConfig":"19"},{"size":592,"mtime":1610605664590,"results":"29","hashOfConfig":"19"},{"size":1061,"mtime":1611495539565,"results":"30","hashOfConfig":"19"},{"size":605,"mtime":1610634381286,"results":"31","hashOfConfig":"19"},{"size":10364,"mtime":1611061719273,"results":"32","hashOfConfig":"19"},{"size":7147,"mtime":1611496723570,"results":"33","hashOfConfig":"19"},{"size":103,"mtime":1610947838076,"results":"34","hashOfConfig":"19"},{"size":200,"mtime":1611495899637,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1tqz3jb",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\index.js",[],["74","75"],"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\reportWebVitals.js",[],"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Components\\Sidebar\\index.js",[],"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Components\\Sidebar\\Parts\\Menus.js",[],"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Components\\Sidebar\\Parts\\Brand.js",[],"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\index.js",[],"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Dashboard.js",["76"],"import { useContext } from \"react\";\r\nimport { ModalContext } from \"../Components/Context\";\r\n\r\nconst Dashboard = () => {\r\n    const { getModal,setModal } = useContext(ModalContext);\r\n\r\n    return (\r\n        <>\r\n            <p>Dashboard</p>\r\n            <button onClick={()=>setModal({\r\n                type: \"success\",\r\n                isActive: true,\r\n                title: \"Judul\",\r\n                content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n                Why do we use it?\r\n                It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n                `\r\n            })}>getModal</button>\r\n        </>\r\n    );\r\n};\r\nexport default Dashboard;\r\n","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Info.js",[],"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\App.js",["77"],"import React from \"react\";\nimport Modal from \"./Components/Modal\";\nimport Sidebar from \"./Components/Sidebar/\";\nimport { ModalContext } from \"./Components/Context\";\n// import all pages\nimport Pages from \"./Pages\";\n\nfunction App() {\n    const [modal, setModal] = React.useState({\n        isActive: false,\n        type: \"\",\n        title: \"\",\n        content: \"\",\n    });\n\n    const modalHandler = React.useMemo(() => ({\n        getModal: () => {\n            return modal;\n        },\n        setModal: (value) => {\n            setModal(value);\n        },\n    }));\n\n    return (\n        <ModalContext.Provider value={modalHandler}>\n            <Modal\n                type={modal.type}\n                isActive={modal.isActive}\n                title={modal.title}\n                content={modal.content}\n            />\n            <div className=\"grid grid-cols-main grid-rows-main bg-white-50\">\n                <div>\n                    <Sidebar />\n                </div>\n                <div className=\"w-full overflow-auto\">\n                    <Pages />\n                </div>\n            </div>\n        </ModalContext.Provider>\n    );\n}\n\nexport default App;\n","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Drugs\\index.js",[],"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Drugs\\Search.js",[],"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Drugs\\ActionButton.js",[],"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Drugs\\Datasource.js",[],"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Components\\Table.js",["78"],"import React from \"react\";\r\n\r\nimport {\r\n    useFilters,\r\n    useTable,\r\n    useSortBy,\r\n    useGlobalFilter,\r\n    usePagination,\r\n} from \"react-table\";\r\nimport { TiArrowSortedDown, TiArrowSortedUp } from \"react-icons/ti\";\r\nimport { HiChevronLeft, HiChevronRight } from \"react-icons/hi\";\r\n\r\n/**\r\n * Props :\r\n * inputSearch\r\n * data\r\n * column\r\n * */\r\nconst Table = (Props) => {\r\n   \r\n    const data = React.useMemo(() => Props.data, [Props.data]);\r\n    const columns = React.useMemo(() => Props.column, [Props.column]);\r\n\r\n    React.useEffect(() => {\r\n        setGlobalFilter(Props.inputSearch || undefined);\r\n    }, [Props.inputSearch]);\r\n\r\n    const tableInstance = useTable(\r\n        { columns, data, initialState: { pageIndex: 0 } },\r\n        useFilters, // useFilters!\r\n        useGlobalFilter, // useGlobalFilter!\r\n        useSortBy,\r\n        usePagination\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        setGlobalFilter,\r\n\r\n        page, // Instead of using 'rows', we'll use page,\r\n        // which has only the rows for the active page\r\n\r\n        // The rest of these things are super handy, too ;)\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        state: { pageIndex, pageSize },\r\n    } = tableInstance;\r\n\r\n    return (\r\n        <>\r\n            <table {...getTableProps()} className=\"border-collapse w-full\">\r\n                <thead>\r\n                    {\r\n                        // Loop over the header rows\r\n                        headerGroups.map((headerGroup) => (\r\n                            // Apply the header row props\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                {\r\n                                    // Loop over the headers in each row\r\n                                    headerGroup.headers.map((column) => (\r\n                                        // Apply the header cell props\r\n                                        <th\r\n                                            {...column.getHeaderProps(\r\n                                                column.getSortByToggleProps()\r\n                                            )}\r\n                                            className=\"p-3 font-bold uppercase bg-white text-gray-600 border border-gray-300 hidden lg:table-cell\"\r\n                                        >\r\n                                            {\r\n                                                // Render the header\r\n                                                column.render(\"Header\")\r\n                                            }\r\n                                            <span>\r\n                                                {column.isSorted ? (\r\n                                                    column.isSortedDesc ? (\r\n                                                        <TiArrowSortedDown className=\"inline-block\" />\r\n                                                    ) : (\r\n                                                        <TiArrowSortedUp className=\"inline-block\" />\r\n                                                    )\r\n                                                ) : (\r\n                                                    \"\"\r\n                                                )}\r\n                                            </span>\r\n                                        </th>\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </thead>\r\n                {/* Apply the table body props */}\r\n                <tbody {...getTableBodyProps()}>\r\n                    {\r\n                        // Loop over the table rows\r\n                        page.map((row, i) => {\r\n                            // Prepare the row for display\r\n                            prepareRow(row);\r\n                            return (\r\n                                // Apply the row props\r\n                                <tr\r\n                                    {...row.getRowProps()}\r\n                                    className=\"bg-white lg:hover:bg-gray-100 flex lg:table-row flex-row lg:flex-row flex-wrap lg:flex-no-wrap mb-10 lg:mb-0\"\r\n                                >\r\n                                    {\r\n                                        // Loop over the rows cells\r\n                                        row.cells.map((cell) => {\r\n                                            // Apply the cell props\r\n                                            return (\r\n                                                <td\r\n                                                    {...cell.getCellProps()}\r\n                                                    className=\"w-full lg:w-auto p-3 text-gray-800 text-center border border-b block lg:table-cell relative lg:static\"\r\n                                                >\r\n                                                    {\r\n                                                        // Render the cell contents\r\n                                                        cell.render(\"Cell\")\r\n                                                    }\r\n                                                </td>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tr>\r\n                            );\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            {/* \r\n        Pagination can be built however you'd like. \r\n        This is just a very basic UI implementation:\r\n      */}\r\n\r\n            <div className=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\r\n                <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-center\">\r\n                    <select\r\n                        className=\"appearance-none mr-2 relative inline-flex items-center px-4 py-2 text-sm font-medium rounded-md text-gray-700 bg-white hover:text-gray-500\"\r\n                        value={pageSize}\r\n                        onChange={(e) => {\r\n                            setPageSize(Number(e.target.value));\r\n                        }}\r\n                    >\r\n                        {[10, 20, 30, 40, 50].map((pageSize) => (\r\n                            <option key={pageSize} value={pageSize}>\r\n                                Show {pageSize}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <div>\r\n                        <nav\r\n                            className=\"relative z-0 inline-flex shadow-sm -space-x-px\"\r\n                            aria-label=\"Pagination\"\r\n                        >\r\n                            <button\r\n                                onClick={() => gotoPage(0)}\r\n                                disabled={!canPreviousPage}\r\n                                className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                            >\r\n                                <span className=\"sr-only\">Previous</span>\r\n                                <HiChevronLeft />\r\n                                <HiChevronLeft />\r\n                            </button>\r\n                            <button\r\n                                onClick={() => previousPage()}\r\n                                disabled={!canPreviousPage}\r\n                                className=\"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                            >\r\n                                <span className=\"sr-only\">Previous</span>\r\n\r\n                                <HiChevronLeft />\r\n                            </button>\r\n\r\n                            <input\r\n                                className=\"text-center w-16 relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50\"\r\n                                type=\"number\"\r\n                                value={pageIndex + 1}\r\n                                // defaultValue={pageIndex + 1}\r\n                                onChange={(e) => {\r\n                                    const page = e.target.value\r\n                                        ? Number(e.target.value) - 1\r\n                                        : 0;\r\n                                    gotoPage(page);\r\n                                }}\r\n                            />\r\n                            <button\r\n                                onClick={() => nextPage()}\r\n                                disabled={!canNextPage}\r\n                                className=\"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                            >\r\n                                <span className=\"sr-only\">Next</span>\r\n                                <HiChevronRight />\r\n                            </button>\r\n                            <button\r\n                                onClick={() => gotoPage(pageCount - 1)}\r\n                                disabled={!canNextPage}\r\n                                className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                            >\r\n                                <span className=\"sr-only\">Next</span>\r\n                                <HiChevronRight />\r\n                                <HiChevronRight />\r\n                            </button>\r\n                        </nav>\r\n                        <div className=\"text-center relative inline-flex items-center px-4 py-2 bg-white text-sm font-medium text-gray-700\">\r\n                            Page {pageIndex + 1} of {pageOptions.length}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Components\\Modal.js",["79","80","81","82","83"],"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Components\\Context.js",[],"C:\\Users\\RIZKI\\Desktop\\pharmacy-app\\src\\Pages\\Drugs\\Detail\\index.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":5,"column":13,"nodeType":"90","messageId":"91","endLine":5,"endColumn":21},{"ruleId":"92","severity":1,"message":"93","line":16,"column":26,"nodeType":"94","endLine":16,"endColumn":39},{"ruleId":"92","severity":1,"message":"95","line":26,"column":8,"nodeType":"96","endLine":26,"endColumn":27,"suggestions":"97"},{"ruleId":"88","severity":1,"message":"98","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":23},{"ruleId":"88","severity":1,"message":"99","line":2,"column":22,"nodeType":"90","messageId":"91","endLine":2,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":92,"column":41,"nodeType":"102","messageId":"103","endLine":92,"endColumn":70},{"ruleId":"100","severity":1,"message":"104","line":96,"column":41,"nodeType":"102","messageId":"103","endLine":96,"endColumn":74},{"ruleId":"100","severity":1,"message":"105","line":100,"column":41,"nodeType":"102","messageId":"103","endLine":100,"endColumn":76},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'getModal' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","React Hook React.useEffect has a missing dependency: 'setGlobalFilter'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'HiExclamation' is defined but never used.","'useState' is defined but never used.","no-dupe-keys","Duplicate key 'bg-red-600 hover:bg-red-700'.","ObjectExpression","unexpected","Duplicate key 'bg-green-600 hover:bg-green-700'.","Duplicate key 'bg-yellow-600 hover:bg-yellow-700'.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [Props.inputSearch, setGlobalFilter]",{"range":"111","text":"112"},[616,635],"[Props.inputSearch, setGlobalFilter]"]